services:

  front-socket:
    build: ./front-socket
    command: ["npm", "run", "dev"]
    ports:
      - "3003:3000"
    environment:
      PORT: 3000
    volumes:
      - ./front-socket:/app
      # Cela montera le répertoire node_modules sur la machine hôte.
      - /app/node_modules
    depends_on:
      socket:
        condition: service_started
    networks:
      - net


  socket:
    build: ./socket
    command: ["npm", "run", "dev"]
    ports:
      - "3002:3000"
    environment:
      PORT: 3000
      RABBITMQ_URI: "amqp://guest:guest@rabbitmq"
      RABBITMQ_QUEUE_NAME: "queue-api-socket"
    volumes:
      - ./socket:/app
      # Cela montera le répertoire node_modules sur la machine hôte.
      - /app/node_modules
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - net

  api:
    build: ./api
    command: ["npm", "run", "dev"]
    ports:
      - "3001:3000"
    environment:
      PORT: 3000
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DATABASE: "postgres"
      POSTGRES_HOST: "db"
      RABBITMQ_URI: "amqp://guest:guest@rabbitmq"
      RABBITMQ_QUEUE_NAME: "queue-api-socket"
    volumes:
      - ./api:/app
      # Cela montera le répertoire node_modules sur la machine hôte.
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - net

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - /var/voting-app/rabbitmq/data:/var/lib/rabbitmq/
      - /var/voting-app/rabbitmq/log:/var/log/rabbitmq/
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - net

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - /var/voting-app/postgresql/data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: "5s"
    ports:
      - "5432:5432"
    networks:
      - net

networks:
  net:
